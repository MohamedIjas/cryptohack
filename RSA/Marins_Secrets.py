from Crypto.Util.number import long_to_bytes

# Given values
p = 2**2203 - 1
q = 2**2281 - 1
e = 65537
c = 400280463088930432319280359115194977582517363610532464295210669530407870753439127455401384569705425621445943992963380983084917385428631223046908837804126399345875252917090184158440305503817193246288672986488987883177380307377025079266030262650932575205141853413302558460364242355531272967481409414783634558791175827816540767545944534238189079030192843288596934979693517964655661507346729751987928147021620165009965051933278913952899114253301044747587310830419190623282578931589587504555005361571572561916866063458812965314474160499067525067495140150092119620928363007467390920130717521169105167963364154636472055084012592138570354390246779276003156184676298710746583104700516466091034510765027167956117869051938116457370384737440965109619578227422049806566060571831017610877072484262724789571076529586427405780121096546942812322324807145137017942266863534989082115189065560011841150908380937354301243153206428896320576609904361937035263985348984794208198892615898907005955403529470847124269512316191753950203794578656029324506688293446571598506042198219080325747328636232040936761788558421528960279832802127562115852304946867628316502959562274485483867481731149338209009753229463924855930103271197831370982488703456463385914801246828662212622006947380115549529820197355738525329885232170215757585685484402344437894981555179129287164971002033759724456

# Correct calculation of n
n = p * q

# Compute Ï†(n) = (p-1) * (q-1)
phi_n = (p - 1) * (q - 1)

# Compute the private key exponent d
d = pow(e, -1, phi_n)

# Decrypt the ciphertext
m = pow(c, d, n)

# Convert the plaintext integer to bytes and decode it
decoded_message = long_to_bytes(m).decode()

print(decoded_message)
